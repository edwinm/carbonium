{"version":3,"file":"bundle.js","sources":["../src/carbonium.ts"],"sourcesContent":["/**\n Carbonium __buildVersion__\n @copyright 2020 Edwin Martin\n @license MIT\n */\n\nexport function $<T extends HTMLElement = HTMLElement>(\n  selectors: string,\n  parentNode?: Document | ShadowRoot | HTMLElement\n): CarboniumType<T> {\n  let nodelist: NodeListOf<T>;\n\n  // If the first parameter starts with \"<\", create a DOM node\n  if (selectors.startsWith(\"<\")) {\n    nodelist = <NodeListOf<T>>(\n      (<unknown>[\n        new DOMParser().parseFromString(selectors, \"text/html\").body.firstChild,\n      ])\n    );\n  } else {\n    // Else, do querySelectorAll\n    nodelist = (parentNode || document).querySelectorAll(selectors);\n  }\n\n  // Wrap it in a Proxy\n  return <CarboniumType<T>>(\n    (<unknown>new Proxy<NodeListOf<T>>(nodelist, proxyHandler))\n  );\n}\n\n// Used by style, classList and relList\n// When setting one of these, remember the elements to apply to\nlet currentListNodelist: NodeListOf<HTMLElement>;\nlet propList: \"style\" | \"classList\" | \"relList\";\n\nconst proxyHandler: ProxyHandler<NodeListOf<HTMLElement>> = {\n  get(target, prop) {\n    let propValue = null;\n\n    // Return iterator when asked for iterator, only used in ES2015+\n    if (prop == Symbol.iterator) {\n      return function* () {\n        for (const element of target) {\n          yield element;\n        }\n      };\n    }\n\n    // Special case for style, classList and relList\n    if (prop == \"style\" || prop == \"classList\" || prop == \"relList\") {\n      currentListNodelist = target;\n      propList = prop;\n      // Matched elements can be a list of any element or an empty list\n      // Use getter of, for example, document.body.style\n      const propValue = Reflect.get(document.body, prop);\n      return new Proxy(propValue, proxyHandler);\n    }\n\n    // style.setProperty, getPropertyValue…, classList.add, contains, remove…, relList…\n    if (\n      target instanceof CSSStyleDeclaration ||\n      target instanceof DOMTokenList\n    ) {\n      // Matched elements can be a list of any element or an empty list\n      // Use getter of, for example, document.body.style.color\n      propValue = Reflect.get(document.body[propList], prop);\n\n      // When getter is a function, apply it to all matched elements\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            currentListNodelist.forEach((el) => {\n              Reflect.apply(target, el[propList], argumentsList);\n            });\n            return new Proxy(currentListNodelist, proxyHandler);\n          },\n        });\n      } else {\n        return propValue;\n      }\n    }\n\n    // Are we dealing with an Array function like forEach, map and filter?\n    if (Array.prototype.hasOwnProperty(prop)) {\n      const propValue = Reflect.get(Array.prototype, prop);\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            const ret = Reflect.apply(target, thisArg, argumentsList);\n            // When function returns undefined (like forEach),\n            // return all matched elements, so calls can be chained\n            // For example forEach(…).setAttribute(…)\n            const newTarget = typeof ret != \"undefined\" ? ret : thisArg;\n            return new Proxy(newTarget, proxyHandler);\n          },\n        });\n      }\n    }\n\n    // Get property or call function on DOM elements\n    if (target.length > 0) {\n      // Might be DOM element specific, like input.select(),\n      // so use first array element to get reference\n      if (prop in target[0]) {\n        propValue = Reflect.get(target[0], prop);\n      }\n    } else {\n      // Empty list, targeted DOM element unknown,\n      // use getter of document.body\n      if (prop in document.body) {\n        propValue = Reflect.get(document.body, prop);\n      }\n    }\n\n    // Propagate DOM prop value\n    if (propValue) {\n      if (typeof propValue == \"function\") {\n        return new Proxy<Function>(propValue, {\n          apply: function (target, thisArg, argumentsList) {\n            let retFirst = null;\n            let first = true;\n            // Apply on individual elements\n            for (const el of thisArg) {\n              const ret = Reflect.apply(target, el, argumentsList);\n              if (first) {\n                retFirst = ret;\n                first = false;\n              }\n            }\n            return retFirst ?? thisArg;\n          },\n        });\n      } else {\n        return propValue;\n      }\n    }\n\n    // Default\n    return Reflect.get(target, prop);\n  },\n\n  // DOM property is set\n  set(target, prop, value) {\n    if (\"forEach\" in target && !(target instanceof CSSStyleDeclaration)) {\n      target.forEach((el) => {\n        Reflect.set(el, prop, value);\n      });\n    } else {\n      Reflect.set(target, prop, value);\n    }\n    return true;\n  },\n\n  deleteProperty(target, prop) {\n    if (prop in target) {\n      return delete target[prop];\n    }\n    return false;\n  },\n};\n\nexport type CarboniumType<T extends HTMLElement = HTMLElement> =\n  CarboniumList<T> & T;\n\n// Interface definitions\n\ninterface CarboniumList<T extends HTMLElement> extends Array<T> {\n  concat(...items: ConcatArray<T>[]): CarboniumType<T>;\n\n  concat(...items: (T | ConcatArray<T>)[]): CarboniumType<T>;\n\n  reverse(): CarboniumType<T>;\n\n  slice(start?: number, end?: number): CarboniumType<T>;\n\n  splice(start: number, deleteCount?: number): CarboniumType<T>;\n\n  /* tslint:disable:unified-signatures */\n  splice(start: number, deleteCount: number, ...items: T[]): CarboniumType<T>;\n\n  forEach(\n    callbackfn: (value: T, index: number, array: T[]) => void,\n    thisArg?: any\n  ): CarboniumType<T>;\n\n  filter(\n    callbackfn: (value: T, index: number, array: T[]) => boolean,\n    thisArg?: any\n  ): CarboniumType<T>;\n\n  setAttribute(qualifiedName: string, value: string): CarboniumType<T>;\n\n  classList: CarboniumClassList<T>;\n  style: CarboniumStyleList<T>;\n}\n\ninterface CarboniumClassList<T extends HTMLElement> extends DOMTokenList {\n  add(...tokens: string[]): CarboniumType<T>;\n\n  remove(...tokens: string[]): CarboniumType<T>;\n\n  replace(oldToken: string, newToken: string): boolean;\n\n  forEach(\n    callbackfn: (value: string, key: number, parent: DOMTokenList) => void,\n    thisArg?: any\n  ): CarboniumType<T>;\n}\n\ninterface CarboniumStyleList<T extends HTMLElement>\n  extends CSSStyleDeclaration {\n  removeProperty(property: string): CarboniumList<T> & string;\n\n  setProperty(\n    property: string,\n    value: string | null,\n    priority?: string\n  ): CarboniumType<T>;\n}\n"],"names":[],"mappings":"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"}